---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";

export const prerender = true;

// Get all services
const services = await getCollection("services");

// Sort services by order property
const sortedServices = services.sort(
  (a: CollectionEntry<"services">, b: CollectionEntry<"services">) =>
    (a.data.order || 999) - (b.data.order || 999)
);

// Get featured services
const featuredServices = sortedServices.filter(
  (service: CollectionEntry<"services">) => service.data.featured
);

// Get all unique categories
const categories = [
  ...new Set(services.map((service) => service.data.category).filter(Boolean)),
];
---

<Layout
  title="Servicii - SIA Skin Center"
  description="Descoperă serviciile noastre de înfrumusețare și îngrijire a pielii: epilare definitivă, tratamente faciale, corporale și multe altele."
>
  <main class="container mx-auto px-4 py-12 md:py-16">
    <div class="max-w-7xl mx-auto">
      <!-- Hero section -->
      <div class="text-center mb-16 md:mb-20">
        <h1
          class="text-4xl md:text-5xl font-bold text-[rgb(var(--text-primary))] mb-4"
          data-aos="fade-up"
        >
          Servicii SIA Skin Center
        </h1>
        <p
          class="text-lg text-[rgb(var(--text-secondary))] max-w-2xl mx-auto"
          data-aos="fade-up"
          data-aos-delay="100"
        >
          Tratamente faciale și corporale personalizate, realizate cu produse
          profesionale și tehnologii avansate
        </p>
      </div>

      <!-- Featured services -->
      {
        featuredServices.length > 0 && (
          <div class="mb-20">
            <h2
              class="text-2xl md:text-3xl font-bold text-[rgb(var(--text-primary))] text-center mb-10"
              data-aos="fade-up"
            >
              Servicii recomandate
            </h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {featuredServices.map((service, index) => (
                <a
                  href={`/servicii/${service.slug}`}
                  class="group block"
                  data-aos="fade-up"
                  data-aos-delay={index * 100}
                >
                  <article class="flex flex-col bg-[rgb(var(--card))] dark:bg-[rgb(var(--card))] border border-[rgb(var(--border))]/50 rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-all group-hover:-translate-y-1 duration-300 h-full">
                    {service.data.image && (
                      <div class="aspect-[16/9] overflow-hidden">
                        <img
                          src={service.data.image.src || service.data.image}
                          alt={service.data.title}
                          class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                        />
                      </div>
                    )}
                    <div class="p-6 flex-grow flex flex-col">
                      {service.data.category && (
                        <span class="inline-block bg-[rgb(var(--accent-1))] text-[rgb(var(--text-secondary))] text-sm px-3 py-1 rounded-full mb-3">
                          {service.data.category}
                        </span>
                      )}
                      <h3 class="text-xl font-bold text-[rgb(var(--text-primary))] mb-3 group-hover:text-[rgb(var(--primary))] transition-colors">
                        {service.data.title}
                      </h3>
                      {service.data.shortDescription && (
                        <p class="text-[rgb(var(--text-secondary))] mb-4 line-clamp-3">
                          {service.data.shortDescription}
                        </p>
                      )}
                      <div class="mt-auto pt-4 flex justify-between items-center border-t border-[rgb(var(--border))]/50">
                        {service.data.price && (
                          <span class="font-bold text-[rgb(var(--primary))]">
                            {service.data.price} lei
                          </span>
                        )}
                        <span class="text-[rgb(var(--primary))] inline-flex items-center text-sm font-medium">
                          Detalii
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                          >
                            <path
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M14 5l7 7m0 0l-7 7m7-7H3"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                  </article>
                </a>
              ))}
            </div>
          </div>
        )
      }

      <!-- Categories -->
      {
        categories.length > 0 && (
          <div class="mb-20">
            <h2
              class="text-2xl md:text-3xl font-bold text-[rgb(var(--text-primary))] text-center mb-10"
              data-aos="fade-up"
            >
              Categorii de servicii
            </h2>
            <div class="flex flex-wrap justify-center gap-4">
              {categories.map((category, index) => (
                <button
                  class="px-5 py-2 bg-[rgb(var(--card))] dark:bg-[rgb(var(--card))] border border-[rgb(var(--border))]/50 rounded-full text-[rgb(var(--text-primary))] hover:bg-[rgb(var(--accent-1))] focus:bg-[rgb(var(--accent-1))] transition-colors"
                  data-category={category}
                  data-aos="fade-up"
                  data-aos-delay={index * 50}
                >
                  {category}
                </button>
              ))}
              <button
                class="px-5 py-2 bg-[rgb(var(--accent-1))] border border-[rgb(var(--accent-1))] rounded-full text-[rgb(var(--text-primary))] hover:bg-[rgb(var(--accent-2))] focus:bg-[rgb(var(--accent-2))] transition-colors"
                data-category="all"
                data-aos="fade-up"
                data-aos-delay={categories.length * 50}
              >
                Toate serviciile
              </button>
            </div>
          </div>
        )
      }

      <!-- All services -->
      <div class="mb-12">
        <h2
          class="text-2xl md:text-3xl font-bold text-[rgb(var(--text-primary))] mb-10 text-center"
          data-aos="fade-up"
        >
          Toate serviciile noastre
        </h2>
        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
          id="services-grid"
        >
          {
            sortedServices.map((service, index) => (
              <a
                href={`/servicii/${service.slug}`}
                class="group block service-card"
                data-category={service.data.category || ""}
                data-aos="fade-up"
                data-aos-delay={(index % 3) * 100}
              >
                <article class="flex flex-col bg-[rgb(var(--card))] dark:bg-[rgb(var(--card))] border border-[rgb(var(--border))]/50 rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-all group-hover:-translate-y-1 duration-300 h-full">
                  {service.data.image && (
                    <div class="h-48 overflow-hidden">
                      <img
                        src={service.data.image.src || service.data.image}
                        alt={service.data.title}
                        class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                      />
                    </div>
                  )}
                  <div class="p-5 flex-grow flex flex-col">
                    {service.data.category && (
                      <span class="inline-block bg-[rgb(var(--accent-1))] text-[rgb(var(--text-secondary))] text-xs px-2 py-1 rounded-full mb-2">
                        {service.data.category}
                      </span>
                    )}
                    <h3 class="text-lg font-bold text-[rgb(var(--text-primary))] mb-2 group-hover:text-[rgb(var(--primary))] transition-colors">
                      {service.data.title}
                    </h3>
                    {service.data.shortDescription && (
                      <p class="text-sm text-[rgb(var(--text-secondary))] mb-3 line-clamp-2">
                        {service.data.shortDescription}
                      </p>
                    )}
                    <div class="mt-auto pt-3 flex justify-between items-center">
                      {service.data.price && (
                        <span class="font-medium text-[rgb(var(--primary))]">
                          {service.data.price} lei
                        </span>
                      )}
                      <span class="text-[rgb(var(--primary))] inline-flex items-center text-sm font-medium">
                        Detalii
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          class="h-4 w-4 ml-1 group-hover:translate-x-1 transition-transform"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M14 5l7 7m0 0l-7 7m7-7H3"
                          />
                        </svg>
                      </span>
                    </div>
                  </div>
                </article>
              </a>
            ))
          }
        </div>
      </div>

      <!-- CTA -->
      <div
        class="bg-[rgb(var(--accent-1))] rounded-xl p-8 md:p-12 my-16 text-center"
        data-aos="fade-up"
      >
        <h2
          class="text-2xl md:text-3xl font-bold text-[rgb(var(--text-primary))] mb-4"
        >
          Programează o consultație gratuită
        </h2>
        <p class="text-[rgb(var(--text-secondary))] mb-8 max-w-2xl mx-auto">
          Suntem aici pentru a te ajuta să obții cele mai bune rezultate.
          Programează o consultație gratuită și personalizată pentru nevoile
          tale.
        </p>
        <div class="flex flex-col sm:flex-row justify-center gap-4">
          <a
            href="/#programare"
            class="px-6 py-3 bg-[rgb(var(--primary))] hover:bg-[rgb(var(--primary-dark))] text-white font-medium rounded-lg transition-colors text-center"
          >
            Programează acum
          </a>
          <a
            href="/contact"
            class="px-6 py-3 bg-white hover:bg-gray-50 text-[rgb(var(--text-primary))] font-medium rounded-lg transition-colors text-center"
          >
            Contactează-ne
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Category filtering
  document.addEventListener("DOMContentLoaded", () => {
    const categoryButtons = document.querySelectorAll("[data-category]");
    const serviceCards = document.querySelectorAll(".service-card");

    if (categoryButtons.length === 0 || serviceCards.length === 0) return;

    // Highlight the "All services" button by default
    const allButton = document.querySelector('[data-category="all"]');
    if (allButton) {
      allButton.classList.add("bg-[rgb(var(--accent-1))]");
    }

    categoryButtons.forEach((button) => {
      button.addEventListener("click", () => {
        // Reset all buttons
        categoryButtons.forEach((btn) => {
          btn.classList.remove("bg-[rgb(var(--accent-1))]");
          btn.classList.add(
            "bg-[rgb(var(--card))]",
            "dark:bg-[rgb(var(--card))]"
          );
        });

        // Highlight the selected button
        button.classList.remove(
          "bg-[rgb(var(--card))]",
          "dark:bg-[rgb(var(--card))]"
        );
        button.classList.add("bg-[rgb(var(--accent-1))]");

        const selectedCategory = button.getAttribute("data-category");

        // Show/hide services based on category
        serviceCards.forEach((card) => {
          const cardElement = card as HTMLElement;
          if (
            selectedCategory === "all" ||
            card.getAttribute("data-category") === selectedCategory
          ) {
            cardElement.style.display = "block";
          } else {
            cardElement.style.display = "none";
          }
        });
      });
    });
  });
</script>
