---
interface Props {
  href: string;
  variant?:
    | "primary"
    | "secondary"
    | "outline"
    | "ghost"
    | "gradient"
    | "whatsapp";
  size?: "sm" | "md" | "lg";
  isFullWidth?: boolean;
  target?: string;
  class?: string;
  withArrow?: boolean;
  withAnimation?: boolean;
  gradientBorder?: boolean;
}

const {
  href,
  variant = "primary",
  size = "md",
  isFullWidth = false,
  target,
  class: className = "",
  withArrow = false,
  withAnimation = true,
  gradientBorder = false,
} = Astro.props;

// Base classes for all variants
const baseClasses =
  "relative inline-flex items-center justify-center font-medium transition-all duration-300";

// Size variants
const sizeClasses = {
  sm: "px-4 py-2 text-sm",
  md: "px-6 py-3 text-base",
  lg: "px-8 py-4 text-lg",
};

// Corner radius based on size
const radiusClasses = {
  sm: "rounded-lg",
  md: "rounded-xl",
  lg: "rounded-2xl",
};

// Style variants - updated with modern design
const variantClasses = {
  primary:
    "bg-primary-600 hover:bg-primary-500 text-white shadow-md hover:shadow-lg",
  secondary:
    "bg-white text-primary-800 hover:bg-gray-50 shadow-md hover:shadow-lg",
  outline:
    "bg-transparent backdrop-blur-sm border-2 border-white/30 text-white hover:bg-white/10 hover:border-white/60",
  ghost: "bg-transparent text-white hover:bg-white/10",
  gradient:
    "bg-gradient-to-r from-secondary-500 to-primary-700 hover:from-primary-400 hover:to-primary-600 text-white shadow-md hover:shadow-lg",
  whatsapp:
    "bg-gradient-to-r from-green-500 to-green-600 hover:from-green-400 hover:to-green-500 text-white shadow-md hover:shadow-lg",
};

// Animation classes
const animationClasses = withAnimation
  ? "transform hover:-translate-y-1 transition-transform"
  : "";

// Full width class
const widthClass = isFullWidth ? "w-full" : "";

// Combine all classes
const classes = [
  baseClasses,
  sizeClasses[size],
  radiusClasses[size],
  variantClasses[variant],
  animationClasses,
  widthClass,
  className,
].join(" ");

// Gradient border effect classes
const hasGradientBorder = gradientBorder || variant === "outline";
---

{
  hasGradientBorder ? (
    <div class={`relative group ${isFullWidth ? "w-full" : "inline-block"}`}>
      <div class="absolute -inset-0.5 bg-gradient-to-r from-primary-500 to-indigo-500 rounded-xl opacity-50 group-hover:opacity-80 blur-sm transition duration-300" />
      <a href={href} target={target} class={`relative ${classes}`}>
        <slot />
        {withArrow && (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5 ml-2 transition-transform group-hover:translate-x-1"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M14 5l7 7m0 0l-7 7m7-7H3"
            />
          </svg>
        )}
      </a>
    </div>
  ) : (
    <a href={href} target={target} class={`group ${classes}`}>
      <slot />
      {withArrow && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5 ml-2 transition-transform group-hover:translate-x-1"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M14 5l7 7m0 0l-7 7m7-7H3"
          />
        </svg>
      )}
    </a>
  )
}
