---
// Advanced responsive image component using Picture
import { Picture } from "astro:assets";
import type { ImageMetadata } from "astro";

// Define the types explicitly
export interface Props {
  src: ImageMetadata;
  alt: string;
  width: number;
  height: number;
  class?: string;
  sizes?: string;
  loading?: "eager" | "lazy";
  decoding?: "async" | "sync" | "auto";
  quality?: number;
  formats?: Array<"avif" | "webp" | "png" | "jpeg" | "jpg">;
  widths?: number[];
}

const {
  src,
  alt,
  width,
  height,
  class: className = "",
  sizes = "(max-width: 768px) 100vw, 50vw",
  loading = "lazy",
  decoding = "async",
  quality = 80,
  formats = ["avif", "webp"],
  widths,
} = Astro.props;

// Calculate widths based on the original image size
const calculatedWidths = widths || [
  width,
  Math.min(2000, Math.round(width * 1.5)),
  Math.min(2000, Math.round(width * 2)),
];
---

<Picture
  src={src}
  alt={alt}
  widths={calculatedWidths}
  sizes={sizes}
  formats={formats}
  loading={loading}
  decoding={decoding}
  quality={quality}
  width={width}
  height={height}
  class={className}
/>

