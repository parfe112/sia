<script is:inline>
  // Check if we are in Google Tag Manager preview mode
  function isGTMPreviewMode() {
    return window.location.search.includes("gtm_debug");
  }

  // If preview mode is detected, load GTM normally
  if (isGTMPreviewMode()) {
    const gtmScript = document.createElement("script");
    gtmScript.src = "https://www.googletagmanager.com/gtag/js?id=GTM-M8DW7D24";
    gtmScript.async = true;
    document.head.appendChild(gtmScript);

    const gtmInit = document.createElement("script");
    gtmInit.innerHTML = `
      window.dataLayer = window.dataLayer || [];
      function gtag(){ dataLayer.push(arguments); }
      gtag("js", new Date());
      gtag("config", "GTM-M8DW7D24");
    `;
    document.head.appendChild(gtmInit);
  }

  // Add a global fetch interceptor to handle CORS issues with Google services
  const originalFetch = window.fetch;
  window.fetch = function (url, options) {
    options = options || {};

    // Special handling for service workers and iframes
    if (
      typeof url === "string" &&
      (url.includes("service_worker") ||
        url.includes("sw_iframe") ||
        url.includes("googletagmanager.com/static"))
    ) {
      options.mode = "no-cors";
      options.credentials = "omit";

      // Add a cache-busting parameter for service worker requests
      if (!url.includes("?")) {
        url = url + "?_cb=" + Date.now();
      } else if (!url.includes("_cb=")) {
        url = url + "&_cb=" + Date.now();
      }

      console.debug("Special handling for service worker request:", url);
      return originalFetch.call(this, url, options);
    }

    // Standard handling for other Google services
    if (
      typeof url === "string" &&
      (url.includes("googleads.g.doubleclick.net") ||
        url.includes("www.googletagmanager.com") ||
        url.includes("www.googleadservices.com"))
    ) {
      options.mode = "no-cors";
      console.debug("Setting no-cors mode for Google service request:", url);
    }

    return originalFetch.call(this, url, options);
  };

  // Create a global function to handle GTM iframe loading
  window.handleGTMIframeLoad = function () {
    try {
      // Find all iframes that might be GTM service workers
      const iframes = document.querySelectorAll(
        'iframe[src*="googletagmanager"]'
      );
      iframes.forEach((iframe) => {
        // Set sandbox attributes to allow more permissions
        iframe.setAttribute(
          "sandbox",
          "allow-same-origin allow-scripts allow-popups allow-forms"
        );
        // Add crossorigin attribute
        iframe.setAttribute("crossorigin", "anonymous");
      });
    } catch (e) {
      console.error("Error handling GTM iframe load:", e);
    }
  };

  // Execute after DOM loads
  document.addEventListener("DOMContentLoaded", window.handleGTMIframeLoad);
  // Also periodically check for new iframes
  setInterval(window.handleGTMIframeLoad, 2000);
</script>

<!-- Default Partytown version for regular users -->
<script
  type="text/partytown"
  src="https://www.googletagmanager.com/gtag/js?id=GTM-M8DW7D24"></script>
<script type="text/partytown">
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());
  gtag("config", "GTM-M8DW7D24");

  // Configure XMLHttpRequest for Google services to avoid CORS issues
  const originalOpen = XMLHttpRequest.prototype.open;
  XMLHttpRequest.prototype.open = function (
    method,
    url,
    async,
    user,
    password
  ) {
    // Special handling for service worker URLs
    if (
      typeof url === "string" &&
      (url.includes("service_worker") ||
        url.includes("sw_iframe") ||
        url.includes("googletagmanager.com/static"))
    ) {
      // Force async to true for these requests
      async = true;
      // Set properties to help with CORS
      this.withCredentials = false;

      // Add a cache-busting parameter
      if (!url.includes("?")) {
        url = url + "?_cb=" + Date.now();
      } else if (!url.includes("_cb=")) {
        url = url + "&_cb=" + Date.now();
      }

      console.debug("Special handling for service worker XHR:", url);
    }
    // Standard handling for other Google services
    else if (
      typeof url === "string" &&
      (url.includes("googleads.g.doubleclick.net") ||
        url.includes("www.googletagmanager.com") ||
        url.includes("www.googleadservices.com"))
    ) {
      this.withCredentials = false;
    }

    return originalOpen.call(this, method, url, async, user, password);
  };

  // Add event listener to catch any errors from service workers
  window.addEventListener(
    "error",
    function (event) {
      if (
        event &&
        event.filename &&
        (event.filename.includes("service_worker") ||
          event.filename.includes("googletagmanager"))
      ) {
        console.debug("Suppressed error from Google service:", event.message);
        // Prevent the error from showing in console
        event.preventDefault();
        return true;
      }
    },
    true
  );
</script>
